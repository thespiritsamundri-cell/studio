rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function getPermissions() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.permissions;
    }
    
    match /Settings/{docId} {
      allow read: if request.auth != null; // Allow any authenticated user to read settings
      allow write: if getRole() == 'super_admin';
    }
    
    match /branding/{docId} {
      allow read: if request.auth != null;
      allow write: if getRole() == 'super_admin';
    }

    match /users/{userId} {
      allow read: if request.auth.uid == userId || getRole() == 'super_admin';
      allow list, write: if getRole() == 'super_admin';
    }
    
    match /activityLog/{logId} {
        allow list, read: if getRole() in ['super_admin', 'accountant', 'coordinator'];
        allow create, update, delete: if getRole() == 'super_admin';
    }
    
    match /sessions/{sessionId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'];
      allow delete: if getRole() == 'super_admin' || request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    match /students/{studentId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'] || getPermissions().students == true;
      allow write: if getRole() == 'super_admin' || getPermissions().students == true || getPermissions().admissions == true;
    }

    match /families/{familyId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'] || getPermissions().families == true;
      allow write: if getRole() == 'super_admin' || getPermissions().families == true;
    }

    match /fees/{feeId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'] || getPermissions().feeCollection == true || getPermissions().income == true;
      allow write: if getRole() == 'super_admin' || getPermissions().feeCollection == true;
    }

    match /teachers/{teacherId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'] || getPermissions().teachers == true;
      allow write: if getRole() == 'super_admin' || getPermissions().teachers == true;
    }

    match /attendances/{attendanceId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'] || getPermissions().attendance == true;
      allow write: if getRole() == 'super_admin' || getPermissions().attendance == true;
    }
    
    match /teacherAttendances/{attendanceId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'] || getPermissions().attendance == true;
      allow write: if getRole() == 'super_admin' || getPermissions().attendance == true;
    }

    match /alumni/{alumniId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'] || getPermissions().alumni == true;
      allow write: if getRole() == 'super_admin' || getPermissions().alumni == true;
    }

    match /classes/{classId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'] || getPermissions().classes == true;
      allow write: if getRole() == 'super_admin' || getPermissions().classes == true;
    }

    match /exams/{examId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'] || getPermissions().examSystem == true;
      allow write: if getRole() == 'super_admin' || getPermissions().examSystem == true;
    }

    match /expenses/{expenseId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'] || getPermissions().expenses == true;
      allow write: if getRole() == 'super_admin' || getPermissions().expenses == true;
    }

    match /timetables/{timetableId} {
      allow read: if getRole() in ['super_admin', 'accountant', 'coordinator'] || getPermissions().timetable == true;
      allow write: if getRole() == 'super_admin' || getPermissions().timetable == true;
    }
  }
}
