
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super_admin';
    }
    
    function isAccountant() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'accountant';
    }

    function isCoordinator() {
       return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coordinator';
    }

    function isAnyPrimaryRole() {
        let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
        return userRole == 'super_admin' || userRole == 'accountant' || userRole == 'coordinator';
    }
    
    function getPermissions() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.permissions;
    }

    match /{document=**} {
      allow read: if request.auth != null;
    }

    match /users/{userId} {
      allow read, write: if request.auth != null && isSuperAdmin();
      allow get: if request.auth != null;
    }
    
    match /Settings/{docId} {
        allow read: if request.auth != null;
        allow write: if isSuperAdmin();
    }
    
    match /branding/{docId} {
        allow read: if request.auth != null;
        allow write: if isSuperAdmin();
    }
    
    match /sessions/{sessionId} {
      allow get, delete: if request.auth != null;
      allow list, write: if isSuperAdmin();
    }
    
    match /notifications/{docId} {
        allow get, list, update: if isSuperAdmin();
        allow create: if isAnyPrimaryRole();
    }
    
    match /activityLog/{logId} {
        allow read: if isSuperAdmin();
        allow create: if isAnyPrimaryRole();
        allow delete: if isSuperAdmin();
    }

    match /students/{studentId} {
      allow write: if getPermissions().students;
    }

    match /families/{familyId} {
      allow write: if getPermissions().families;
    }
    
    match /alumni/{alumniId} {
        allow write: if getPermissions().alumni;
    }

    match /fees/{feeId} {
      allow create: if getPermissions().feeCollection || getPermissions().income;
      allow update, delete: if getPermissions().feeCollection || getPermissions().income;
    }
    
    match /expenses/{expenseId} {
        allow create, update, delete: if getPermissions().expenses;
    }
    
    match /teachers/{teacherId} {
        allow write: if getPermissions().teachers;
    }
    
    match /classes/{classId} {
        allow write: if getPermissions().classes;
    }
    
    match /attendances/{attendanceId} {
        allow write: if getPermissions().attendance;
    }
    
     match /teacherAttendances/{attendanceId} {
        allow write: if getPermissions().attendance;
    }
    
    match /exams/{examId} {
        allow write: if getPermissions().examSystem;
    }
    
    match /timetables/{timetableId} {
        allow write: if getPermissions().timetable;
    }
  }
}
