rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    function getPermissions() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.permissions;
    }

    function isPrimaryRole() {
      let role = getUserRole();
      return role == 'super_admin' || role == 'accountant' || role == 'coordinator';
    }

    // Collection Rules
    match /{document=**} {
      allow read: if request.auth != null;
    }
    
    match /users/{userId} {
      allow read: if request.auth != null;
      allow update: if getUserRole() == 'super_admin' || isOwner(userId);
      allow create: if getUserRole() == 'super_admin';
    }
    
    match /sessions/{sessionId} {
      allow read: if isPrimaryRole();
      allow create, update: if request.auth != null;
      allow delete: if getUserRole() == 'super_admin' || isOwner(resource.data.userId);
    }
    
    match /activityLog/{logId} {
      allow read: if getPermissions().settings == true;
      allow create: if isPrimaryRole();
      allow delete: if getPermissions().settings == true;
    }
    
    match /notifications/{notificationId} {
        allow read, update: if getUserRole() == 'super_admin';
        allow create: if isPrimaryRole();
    }
    
    match /Settings/{settingId} {
        allow read: if request.auth != null;
        allow write: if getPermissions().settings == true;
    }

    match /students/{studentId} {
      allow read: if request.auth != null;
      allow write: if getPermissions().students == true;
    }
    
    match /alumni/{alumniId} {
      allow read: if request.auth != null;
      allow write: if getPermissions().alumni == true;
    }

    match /families/{familyId} {
      allow read: if request.auth != null;
      allow write: if getPermissions().families == true;
    }

    match /classes/{classId} {
      allow read: if request.auth != null;
      allow write: if getPermissions().classes == true;
    }

    match /teachers/{teacherId} {
      allow read: if request.auth != null;
      allow write: if getPermissions().teachers == true;
    }
    
    match /timetables/{timetableId} {
        allow read: if request.auth != null;
        allow write: if getPermissions().timetable == true;
    }

    match /fees/{feeId} {
      allow read: if request.auth != null;
      allow create: if getPermissions().feeCollection == true || getPermissions().income == true;
      allow update, delete: if getPermissions().feeCollection == true || getPermissions().income == true;
    }
    
    match /expenses/{expenseId} {
      allow read: if request.auth != null;
      allow create, update, delete: if getPermissions().expenses == true;
    }

    match /exams/{examId} {
      allow read: if request.auth != null;
      allow write: if getPermissions().examSystem == true;
    }

    match /attendances/{attendanceId} {
      allow read: if request.auth != null;
      allow write: if getPermissions().attendance == true;
    }

    match /teacherAttendances/{attendanceId} {
      allow read: if request.auth != null;
      allow write: if getPermissions().attendance == true;
    }
  }
}
