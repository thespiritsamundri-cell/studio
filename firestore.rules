rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function getPermissions() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.permissions;
    }

    function isSuperAdmin() {
      return getRole() == "super_admin";
    }

    function isCoordinator() {
      return getRole() == "coordinator";
    }

    function isAccountant() {
      return getRole() == "accountant";
    }

    // --- Collections ---
    match /users/{userId} {
      // Allow a user to read their own document to get their role/permissions
      allow get: if request.auth.uid == userId;
      // Allow super admins to read/write/list all user documents
      allow list, read, write: if isSuperAdmin();
    }
    
    match /Settings/{docId} {
        // Allow any authenticated user to read settings for UI configuration
        allow get: if request.auth.uid != null;
        // Only super admin can change settings
        allow write: if isSuperAdmin();
    }
    
    match /sessions/{docId} {
        allow read, write: if isSuperAdmin();
    }

    match /activityLog/{docId} {
      // Allow all main roles to read the activity log for the dashboard
      allow list, read: if isSuperAdmin() || isCoordinator() || isAccountant();
      // Only super admin can write or clear the log
      allow write: if isSuperAdmin();
    }

    match /students/{docId} {
      allow list, read: if isSuperAdmin() || getPermissions().students == true;
      allow write: if isSuperAdmin() || getPermissions().students == true;
    }

    match /families/{docId} {
      allow list, read: if isSuperAdmin() || getPermissions().families == true;
      allow write: if isSuperAdmin() || getPermissions().families == true;
    }
    
    match /teachers/{docId} {
      allow list, read: if isSuperAdmin() || getPermissions().teachers == true || isAccountant() || isCoordinator();
      allow write: if isSuperAdmin() || getPermissions().teachers == true;
    }

    match /classes/{docId} {
      allow list, read: if isSuperAdmin() || getPermissions().classes == true || isAccountant() || isCoordinator();
      allow write: if isSuperAdmin() || getPermissions().classes == true;
    }

    match /fees/{docId} {
      allow list, read: if isSuperAdmin() || getPermissions().feeCollection == true;
      allow write: if isSuperAdmin() || getPermissions().feeCollection == true;
    }

    match /expenses/{docId} {
      allow list, read: if isSuperAdmin() || getPermissions().expenses == true;
      allow write: if isSuperAdmin() || getPermissions().expenses == true;
    }

    match /attendances/{docId} {
      allow list, read: if isSuperAdmin() || getPermissions().attendance == true;
      allow write: if isSuperAdmin() || getPermissions().attendance == true;
    }
    
    match /teacherAttendances/{docId} {
      allow list, read: if isSuperAdmin() || getPermissions().attendance == true || isAccountant() || isCoordinator();
      allow write: if isSuperAdmin() || getPermissions().attendance == true;
    }
    
    match /exams/{docId} {
      allow list, read: if isSuperAdmin() || getPermissions().examSystem == true || isAccountant() || isCoordinator();
      allow write: if isSuperAdmin() || getPermissions().examSystem == true;
    }

    match /timetables/{docId} {
      allow list, read: if isSuperAdmin() || getPermissions().timetable == true || isAccountant() || isCoordinator();
      allow write: if isSuperAdmin() || getPermissions().timetable == true;
    }

    match /alumni/{docId} {
      allow list, read: if isSuperAdmin() || getPermissions().alumni == true || isAccountant() || isCoordinator();
      allow write: if isSuperAdmin() || getPermissions().alumni == true;
    }
  }
}
