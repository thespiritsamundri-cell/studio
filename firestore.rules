rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSuperAdmin() {
      // Use exists() to prevent errors on non-existent user docs.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super_admin';
    }
    
    function hasPermission(permission) {
        return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
               get(/databases/$(database)/documents/users/$(request.auth.uid)).data.permissions[permission] == true;
    }

    // Allow reading any document if authenticated. Write access is handled by specific rules.
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if false; // Deny writes by default
    }

    match /users/{userId} {
      allow write: if isSuperAdmin();
    }
    
    match /Settings/{docId} {
        allow write: if isSuperAdmin() || hasPermission('settings');
    }
    
    match /sessions/{sessionId} {
      allow create, update, delete: if request.auth != null;
    }

    match /students/{studentId} {
      allow write: if isSuperAdmin() || hasPermission('students') || hasPermission('admissions');
    }
    
    match /families/{familyId} {
        allow write: if isSuperAdmin() || hasPermission('families') || hasPermission('admissions');
    }

    match /fees/{feeId} {
      allow create: if isSuperAdmin() || hasPermission('feeCollection');
      allow update, delete: if isSuperAdmin() || hasPermission('feeCollection') || hasPermission('income');
    }
    
    match /expenses/{expenseId} {
       allow write: if isSuperAdmin() || hasPermission('expenses');
    }

    match /teachers/{teacherId} {
      allow write: if isSuperAdmin() || hasPermission('teachers');
    }
    
    match /classes/{classId} {
       allow write: if isSuperAdmin() || hasPermission('classes');
    }
    
    match /exams/{examId} {
        allow write: if isSuperAdmin() || hasPermission('examSystem');
    }

    match /timetables/{timetableId} {
        allow write: if isSuperAdmin() || hasPermission('timetable');
    }
    
    match /activityLog/{logId} {
        allow create: if request.auth != null;
        allow delete: if isSuperAdmin();
    }
    
    match /notifications/{notificationId} {
        allow create: if request.auth != null;
        allow update: if isSuperAdmin(); // Only super_admin can mark as read (update)
    }
    
    match /alumni/{alumniId} {
        allow create, update, delete: if isSuperAdmin() || hasPermission('students');
    }
    
    match /attendances/{attendanceId} {
        allow write: if isSuperAdmin() || hasPermission('attendance');
    }
    
    match /teacherAttendances/{attendanceId} {
        allow write: if isSuperAdmin() || hasPermission('attendance');
    }
    
  }
}
