rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    function hasPermission(permission) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return user.role == 'super_admin' || user.permissions[permission] == true;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if getUserRole(request.auth.uid) == 'super_admin';
    }

    match /students/{studentId} {
      allow read: if hasPermission('students');
      allow create, update: if hasPermission('admissions') || hasPermission('students');
      allow delete: if hasPermission('students');
    }
    
    match /alumni/{alumnusId} {
      allow read: if hasPermission('alumni');
      allow create, update, delete: if hasPermission('students'); 
    }

    match /families/{familyId} {
      allow read: if hasPermission('families');
      allow create, update: if hasPermission('families');
      allow delete: if hasPermission('families');
    }

    match /fees/{feeId} {
      allow read, create, update, delete: if hasPermission('feeCollection');
    }

    match /teachers/{teacherId} {
      allow read, write: if hasPermission('teachers');
    }
    
    match /attendances/{attendanceId} {
      allow read, write: if hasPermission('attendance');
    }
    
    match /teacherAttendances/{attendanceId} {
      allow read, write: if hasPermission('attendance');
    }

    match /classes/{classId} {
      allow read, write: if hasPermission('classes');
    }
    
    match /expenses/{expenseId} {
      allow read, write: if hasPermission('expenses');
    }
    
    match /exams/{examId} {
        allow read, write: if hasPermission('examSystem');
    }
    
    match /timetables/{timetableId} {
        allow read, write: if hasPermission('timetable');
    }
    
    match /activityLog/{logId} {
      allow read, create: if hasPermission('settings');
      allow delete: if getUserRole(request.auth.uid) == 'super_admin';
    }
    
    match /notifications/{notificationId} {
      allow read, write: if getUserRole(request.auth.uid) == 'super_admin';
    }
    
    match /branding/school-assets {
        allow read: if true;
        allow write: if hasPermission('settings');
    }

    match /Settings/School Settings {
      allow read: if true;
      allow write: if hasPermission('settings');
    }
  }
}
