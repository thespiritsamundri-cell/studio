rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super_admin';
    }
    
    function getUserPermissions() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.permissions;
    }

    // Rules for each collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow list: if isSuperAdmin();
      allow write: if isSuperAdmin();
    }
    
    match /Settings/{docId} {
        allow read: if isSignedIn();
        allow write: if isSuperAdmin();
    }
    
    match /sessions/{sessionId} {
      allow read: if isSignedIn();
      allow list: if isSuperAdmin();
      allow create, delete: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }

    match /activityLog/{logId} {
      allow read, list: if isSuperAdmin() || getUserPermissions().dashboard;
      allow create: if isSignedIn();
    }
    
    match /notifications/{notifId} {
      allow read: if isSuperAdmin();
      allow create: if isSignedIn();
      allow update(isRead): if isSuperAdmin() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isRead']);
    }
    
    match /{document=**} {
        // Default deny all other reads and writes
        allow read, write: if false;
    }

    function canAccess(permission) {
        return isSuperAdmin() || getUserPermissions()[permission] == true;
    }

    match /students/{studentId} {
      allow read: if isSignedIn();
      allow create: if canAccess('admissions');
      allow update, delete: if canAccess('students');
    }
    
    match /alumni/{alumniId} {
      allow read: if isSignedIn();
      allow create, update, delete: if canAccess('students') || canAccess('alumni');
    }

    match /families/{familyId} {
      allow read: if isSignedIn();
      allow create, update, delete: if canAccess('families');
    }
    
    match /teachers/{teacherId} {
        allow read: if isSignedIn();
        allow create, update, delete: if canAccess('teachers');
    }

    match /classes/{classId} {
      allow read: if isSignedIn();
      allow create, update, delete: if canAccess('classes');
    }

    match /fees/{feeId} {
      allow read: if isSignedIn();
      allow create: if canAccess('feeCollection') || canAccess('income');
      allow update, delete: if canAccess('feeCollection') || canAccess('income');
    }
    
    match /expenses/{expenseId} {
        allow read: if isSignedIn();
        allow create, update, delete: if canAccess('expenses');
    }
    
    match /exams/{examId} {
        allow read: if isSignedIn();
        allow create, update, delete: if canAccess('examSystem');
    }
    
    match /attendances/{attendanceId} {
        allow read: if isSignedIn();
        allow create, update: if canAccess('attendance');
    }
    
    match /teacherAttendances/{attendanceId} {
        allow read: if isSignedIn();
        allow create, update: if canAccess('attendance');
    }
    
    match /timetables/{timetableId} {
        allow read: if isSignedIn();
        allow create, update: if canAccess('timetable');
    }
  }
}
