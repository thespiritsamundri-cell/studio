rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check user permissions from their user document
    function hasPermission(permission) {
      // Get the user's document from the 'users' collection using their UID
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      
      // Super Admins have all permissions
      if (userDoc.data.role == 'super_admin') {
        return true;
      }
      
      // For custom roles, check the specific permission flag
      return userDoc.data.permissions[permission] == true;
    }

    // Students: Coordinators/Admissions can manage, all authenticated can view.
    match /students/{studentId} {
      allow read: if request.auth != null;
      allow write: if hasPermission('students');
    }
    
    // Alumni: Coordinators/Admissions can manage, all authenticated can view.
    match /alumni/{alumnusId} {
      allow read: if request.auth != null;
      allow write: if hasPermission('alumni');
    }

    // Families: Coordinators/Admissions can manage, all authenticated can view.
    match /families/{familyId} {
      allow read: if request.auth != null;
      allow write: if hasPermission('families');
    }

    // Classes: Coordinators/Academics can manage, all authenticated can view.
    match /classes/{classId} {
      allow read: if request.auth != null;
      allow write: if hasPermission('classes');
    }

    // Teachers: Coordinators/Academics can manage, all authenticated can view.
    match /teachers/{teacherId} {
      allow read: if request.auth != null;
      allow write: if hasPermission('teachers');
    }
    
    // Expenses: Accountants can manage, super admins can view.
    match /expenses/{expenseId} {
      allow read: if hasPermission('expenses');
      allow create, update, delete: if hasPermission('expenses');
    }
    
    // Fees: Accountants can manage, super admins can view.
    match /fees/{feeId} {
      allow read: if hasPermission('feeCollection') || hasPermission('income');
      allow create, update, delete: if hasPermission('feeCollection') || hasPermission('income');
    }

    // Attendance: Coordinators/Academics can manage, all authenticated can view.
    match /attendances/{attendanceId} {
      allow read: if request.auth != null;
      allow write: if hasPermission('attendance');
    }
    
    match /teacherAttendances/{attendanceId} {
        allow read: if request.auth != null;
        allow write: if hasPermission('attendance');
    }
    
    // Exams: Coordinators/Academics can manage, all authenticated can view.
    match /exams/{examId} {
        allow read: if request.auth != null;
        allow write: if hasPermission('examSystem');
    }
    
    // Timetables: Coordinators/Academics can manage, all authenticated can view.
    match /timetables/{timetableId} {
        allow read: if request.auth != null;
        allow write: if hasPermission('timetable');
    }

    // Settings: Only super_admin can read/write.
    match /Settings/{settingId} {
      allow read, write: if hasPermission('settings');
    }

    // Users: Only super_admin can read/write.
    match /users/{userId} {
      allow read, write: if hasPermission('settings');
      // Allow individual users to read their own document
      allow get: if request.auth.uid == userId;
    }
    
    // Activity Log & Notifications: Read-only for admins
    match /activityLog/{logId} {
        allow read, write: if hasPermission('settings');
    }
    
    match /notifications/{notificationId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super_admin';
    }
    
    // Branding assets are public read
    match /branding/{assetId} {
        allow read: if true;
        allow write: if hasPermission('settings');
    }
  }
}
